(1)
从结构上讲，进程由程序段、数据段和进程控制块组成的，其中进程控制块总有部分或
全部常驻内存，不被换出。
(2)
程序段和数据段可能正被若干进程共享，此时它们也不能换出。
13
．为实现分页存储管理，需要哪些硬件的支持？
答：动态重定位技术、虚拟存储技术、多道程序设计技术。
14
．较详细的说明引入分段存储管理是为了满足用户哪几方面的需要。
答：
1)
方便编程。用户通常把自己的作业按照逻辑关系划分为若干段，每段都从
0
编址，并
有自己名字和长度。因此，希望要访问的逻辑地址是由段名和段内偏移量决定。
2)
信息共享。在实现对程序和数据的共享时，是以信息逻辑单位为基础。分页系统中的页
是存放信息的物理单位，无完整意义，不便于共享；段是信息的逻辑单位。为了实现段
的共享，希望存储管理能与用户程序分段的组织方式相适应。
3)
信息保护。对信息的逻辑单位进行保护，分段能更有效方便地实现信息保护功能。
4)
动态增长。在实际应用中，有些段特别是数据段，在使用过程中会不断增长，事先又无
法确切知道增长多少。分段存储管理方式能较好解决这个问题。
5)
动态链接。运行时先将主程序对应的目标程序装入内存并启动运行，运行过程中又需要
调用某段时，才将该段调入内存链接。所以动态链接也要求以段作为管理单位。
15
．在具有快表的段页式存储管理方式中，如何实现地址变换？
答：在
CPU
给出有效地址后，由地址变换机构自动将页号
P
送入高速缓冲寄存器，并将此
页号与高速缓存中的所有页号比较，
若找到匹配页号，
表示要访问的页表项在快表中。
可直
接从快表读出该页对应物理块号，
送到物理地址寄存器中。
如快表中没有对应页表项，
则再
访问内存页表，
找到后，
把从页表项中读出物理块号送地址寄存器；同时修改快表，将此页
表项存入快表。但若寄存器已满，则
OS
必须找到合适的页表项换出。
16
．为什么说为什么说分段系统比分页系统更易于实现信息的共享和保护？
答：
分页系统的每个页面是分散存储的，
为了实现信息共享和保护，
页面之间需要一一对应，
为此需要建立大量的页表项；而分段系统的每个段都从
0
编址，并采用一段连续的地址空
间，
在实现共享和保护时，
只需为要共享和保护的程序设置一个段表项，
将其中的基址与内
存地址一一对应就能够实现。
17
．分段和分页存储管理有何区别？
答：
（
1
）页是信息的物理单位，分页是为了实现离散分配方式，以消减内存的外部零头，提高
内存利用率。段则是信息的逻辑单位，它含有一组相对完整的信息。
（
2
）页的大小固定且由系统决定，由系统把逻辑地址划分为页号和页内地址两部分，是由
机械硬件实现的
,
因而在系统中只能有一种大小的的页面
;
而段的长度却不固定
,
决定于用户