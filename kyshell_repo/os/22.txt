答：
在程序执行过程中，
每当访问指令或数据时，
将要访问的程序或数据的逻辑地址转换成
物理地址，引入了动态重定位；
具体实现方法是在系统中增加一个重定位寄存器，用来装入程序在内存中的起始地址，
程序执行时，
真正访问的内存地址是相对地址与重定位寄存器中的地址相加之和，
从而实现
动态重定位。
7
．在采用首次适应算法回收内存时，可能出现哪几种情况？应怎样处理这些情况？
答：在采用首次适应算法回收内存时可能出现
4
种情况：
（
1
）
回收区前邻空闲区。
将回收区与前邻空闲区合并，
将前邻空闲区大小修改为两者之和。
（
2
）
回收区后邻空闲区。
将两区合并，
改后邻空闲区始址为回收区始址，
大小为两者之和。
（
3
）回收区前后均邻空闲区。将三个分区合并，修改前邻空闲区大小为三者之和。
（
4
）回收区前后均不邻空闲区。为回收区设置空闲区表项，填入回收区始址和大小并插入
空闲区队列。
8
．令
表示大小为
、地址为
x
的块的伙伴系统地址，试写出的通用表达式。
答
:
当
时，
；当
时，
9
．分区存储管理中常用那些分配策略？比较它们的优缺点。
答：分区存储管理中的常用分配策略：首次适应算法、循环首次适应算法、最佳适应算法、
最坏适应算法。
首次适应算法优缺点：
保留了高址部分的大空闲区，
有利于后来的大型作业分配；
低址部分
不断被划分，留下许多难以利用的小空闲区，每次查找都从低址开始增加了系统开销。
循环首次适应算法优缺点：
内存空闲分区分布均匀，
减少了查找系统开销；
缺乏大空闲分区，
导致不能装入大型作业。
最佳适应算法优缺点：
每次分配给文件的都是最适合该文件大小的分区，
内存中留下许多难
以利用的小空闲区。
最坏适应算法优缺点：
剩下空闲区不太小，
产生碎片几率小，
对中小型文件分配分区操作有
利；存储器中缺乏大空闲区，对大型文件分区分配不利。
10
．在系统中引入对换后可带来哪些好处？
答：
交换技术将暂不需要的作业移到外存，
让出内存空间以调入其它作业，
交换到外存的作
业也可以被再次调入。
目的是解决内存紧张问题，
带来的好处是进一步提高了内存利用率和
系统吞吐量。
11
．为实现对换，系统应具备哪几方面的功能？
答：系统应具备三方面功能：对换空间管理，进程换出，进程换入。
12
．在以进程为单位进行对换时，每次是否都将整个进程换出？为什么？
答：在以进程为单位进行对换时，并非每次都将整个进程换出。这是因为：